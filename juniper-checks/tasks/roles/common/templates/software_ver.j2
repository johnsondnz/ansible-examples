{% from 'output_macro.j2' import output_macro with context %}
{% if 'srx550' in ansible_net_model %}
{% set sw_ver = srx550_software_ver %}
{% elif 'ex4300' in ansible_net_model %}
{% set sw_ver = ex4300_software_ver %}
{% elif 'mx5' in ansible_net_model %}
{% set sw_ver = mx5_software_ver %}
{% endif %}
{% if show_version.output[0]['rpc-reply']['multi-routing-engine-results'] is defined %}{# first test for multi-chassis JSON structure #}
{% set route_engine = item['re-name'] %}
{% for package in item['software-information']['package-information'] %}
{% set failed = true 
    if sw_ver not in package.comment
    and 'jais' not in package.name
    else false %}
{{ output_macro("Software Version", "Package '{}' is '{}' on {}".format(package.name, sw_ver, route_engine), failed) }}
{% endfor %}
{% else %}{# fallback to single-chassis JSON structure #}
{% set route_engine = 'fpc0' %}
{% set failed = true 
    if sw_ver not in item.comment
    else false %}
{{ output_macro("Software Version", "Package '{}' is '{}' on {}".format(item.name, sw_ver, route_engine), failed) }}
{% endif %}